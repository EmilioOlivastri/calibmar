stages:
  - pre-build
  - build
  - test
  - deploy

default:
  tags:
    - ubuntu # all jobs must be run on ubuntu

check-formatting: # check clang-format on the *.cpp and *.h files in src/ and tests/ modified in the latest commit.
  stage: pre-build
  script:
    - 'git diff-tree --no-commit-id --name-only HEAD -r 'src/**/*.cpp' 'src/**/*.h' 'tests/**/*.cpp' 'tests/**/*.h'  | xargs clang-format --style=file:.clang-format --dry-run --Werror -i'

build:
  stage: build
  script:
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DCUDA_ENABLED=OFF
    - cmake --build .
  artifacts:
    paths:
      - "build/"

build-CUDA:
  stage: build
  script:
    - mkdir build_CUDA
    - cd build_CUDA
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DCUDA_ENABLED=ON -DCMAKE_CUDA_ARCHITECTURE=all-major
    - cmake --build .
  artifacts:
    paths:
      - "build_CUDA/"

test:
  stage: test
  dependencies:
    - build
  script:
    - cd build
    - ctest -j 8

test-CUDA:
  stage: test
  dependencies:
    - build-CUDA
  script:
    - cd build_CUDA
    - ctest -j 8

release:
  stage: deploy
  dependencies: [build, build_CUDA]
  rules:
  - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG ~= \A(\.?[\w\+-]+\.?)+\z # Run this job when a git tag is created and the tag conforms to the generic package version regex
  script:
    - cd build
    - cpack . -G DEB
    - cd ../build_CUDA
    - cpack . -G DEB
    - cd ..
    - PACKAGE_NAME=$(find ./build -maxdepth 1 -name *.deb)
    - PACKAGE_NAME_CUDA=$(find ./build_CUDA -maxdepth 1 -name *.deb)
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./build/$PACKAGE_NAME "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/calibmar-ubuntu-no-cuda/$CI_COMMIT_TAG/$PACKAGE_NAME"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./build_CUDA/$PACKAGE_NAME_CUDA "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/calibmar-ubuntu-cuda/$CI_COMMIT_TAG/$PACKAGE_NAME_CUDA"'

